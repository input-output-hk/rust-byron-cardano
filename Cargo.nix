# Generated by carnix 0.8.11: carnix generate-nix --src ./.
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
let crates = cratesIO // rec {
  crates.cardano."0.1.0" = deps: { features?(features_.cardano."0.1.0" deps {}) }: buildRustCrate {
    crateName = "cardano";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "cardano";
    dependencies = mapFeatures features ([
      (cratesIO.crates."cbor_event"."${deps."cardano"."0.1.0"."cbor_event"}" deps)
      (cratesIO.crates."cryptoxide"."${deps."cardano"."0.1.0"."cryptoxide"}" deps)
    ]
      ++ (if features.cardano."0.1.0".serde or false then [ (cratesIO.crates.serde."1.0.80" deps) ] else [])
      ++ (if features.cardano."0.1.0".serde_derive or false then [ (cratesIO.crates.serde_derive."1.0.80" deps) ] else []));
    features = mkFeatures (features."cardano"."0.1.0" or {});
  };
  features_.cardano."0.1.0" = deps: f: updateFeatures f (rec {
    cardano = fold recursiveUpdate {} [
      { "0.1.0".default = (f.cardano."0.1.0".default or true); }
      { "0.1.0".serde =
        (f.cardano."0.1.0".serde or false) ||
        (f.cardano."0.1.0".generic-serialization or false) ||
        (cardano."0.1.0"."generic-serialization" or false); }
      { "0.1.0".serde_derive =
        (f.cardano."0.1.0".serde_derive or false) ||
        (f.cardano."0.1.0".generic-serialization or false) ||
        (cardano."0.1.0"."generic-serialization" or false); }
    ];
    cbor_event."${deps.cardano."0.1.0".cbor_event}".default = true;
    cryptoxide."${deps.cardano."0.1.0".cryptoxide}".default = true;
    serde."${deps.cardano."0.1.0".serde}".default = true;
    serde_derive."${deps.cardano."0.1.0".serde_derive}".default = true;
  }) [
    (cratesIO.features_.cbor_event."${deps."cardano"."0.1.0"."cbor_event"}" deps)
    (cratesIO.features_.cryptoxide."${deps."cardano"."0.1.0"."cryptoxide"}" deps)
    (cratesIO.features_.serde."${deps."cardano"."0.1.0"."serde"}" deps)
    (cratesIO.features_.serde_derive."${deps."cardano"."0.1.0"."serde_derive"}" deps)
  ];


  crates.cardano_c."0.1.0" = deps: { features?(features_.cardano_c."0.1.0" deps {}) }: buildRustCrate {
    crateName = "cardano-c";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "cardano-c";
    type = [ "staticlib" "dylib" ];
    dependencies = mapFeatures features ([
      (crates."cardano"."${deps."cardano_c"."0.1.0"."cardano"}" deps)
    ]);
  };
  features_.cardano_c."0.1.0" = deps: f: updateFeatures f (rec {
    cardano."${deps.cardano_c."0.1.0".cardano}".default = true;
    cardano_c."0.1.0".default = (f.cardano_c."0.1.0".default or true);
  }) [
    (features_.cardano."${deps."cardano_c"."0.1.0"."cardano"}" deps)
  ];


  crates.cardano_storage."0.1.0" = deps: { features?(features_.cardano_storage."0.1.0" deps {}) }: buildRustCrate {
    crateName = "cardano-storage";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "storage";
    dependencies = mapFeatures features ([
      (crates."cardano"."${deps."cardano_storage"."0.1.0"."cardano"}" deps)
      (cratesIO.crates."cbor_event"."${deps."cardano_storage"."0.1.0"."cbor_event"}" deps)
      (cratesIO.crates."log"."${deps."cardano_storage"."0.1.0"."log"}" deps)
      (cratesIO.crates."rand"."${deps."cardano_storage"."0.1.0"."rand"}" deps)
      (crates."storage_units"."${deps."cardano_storage"."0.1.0"."storage_units"}" deps)
    ]);
  };
  features_.cardano_storage."0.1.0" = deps: f: updateFeatures f (rec {
    cardano."${deps.cardano_storage."0.1.0".cardano}".default = true;
    cardano_storage."0.1.0".default = (f.cardano_storage."0.1.0".default or true);
    cbor_event."${deps.cardano_storage."0.1.0".cbor_event}".default = true;
    log."${deps.cardano_storage."0.1.0".log}".default = true;
    rand."${deps.cardano_storage."0.1.0".rand}".default = true;
    storage_units."${deps.cardano_storage."0.1.0".storage_units}".default = true;
  }) [
    (features_.cardano."${deps."cardano_storage"."0.1.0"."cardano"}" deps)
    (cratesIO.features_.cbor_event."${deps."cardano_storage"."0.1.0"."cbor_event"}" deps)
    (cratesIO.features_.log."${deps."cardano_storage"."0.1.0"."log"}" deps)
    (cratesIO.features_.rand."${deps."cardano_storage"."0.1.0"."rand"}" deps)
    (features_.storage_units."${deps."cardano_storage"."0.1.0"."storage_units"}" deps)
  ];


  crates.exe_common."0.1.0" = deps: { features?(features_.exe_common."0.1.0" deps {}) }: buildRustCrate {
    crateName = "exe-common";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "exe-common";
    dependencies = mapFeatures features ([
      (cratesIO.crates."base64"."${deps."exe_common"."0.1.0"."base64"}" deps)
      (crates."cardano"."${deps."exe_common"."0.1.0"."cardano"}" deps)
      (crates."cardano_storage"."${deps."exe_common"."0.1.0"."cardano_storage"}" deps)
      (cratesIO.crates."cbor_event"."${deps."exe_common"."0.1.0"."cbor_event"}" deps)
      (cratesIO.crates."futures"."${deps."exe_common"."0.1.0"."futures"}" deps)
      (cratesIO.crates."hyper"."${deps."exe_common"."0.1.0"."hyper"}" deps)
      (cratesIO.crates."log"."${deps."exe_common"."0.1.0"."log"}" deps)
      (crates."protocol"."${deps."exe_common"."0.1.0"."protocol"}" deps)
      (cratesIO.crates."rand"."${deps."exe_common"."0.1.0"."rand"}" deps)
      (cratesIO.crates."serde"."${deps."exe_common"."0.1.0"."serde"}" deps)
      (cratesIO.crates."serde_derive"."${deps."exe_common"."0.1.0"."serde_derive"}" deps)
      (cratesIO.crates."serde_json"."${deps."exe_common"."0.1.0"."serde_json"}" deps)
      (cratesIO.crates."serde_yaml"."${deps."exe_common"."0.1.0"."serde_yaml"}" deps)
      (crates."storage_units"."${deps."exe_common"."0.1.0"."storage_units"}" deps)
      (cratesIO.crates."tokio_core"."${deps."exe_common"."0.1.0"."tokio_core"}" deps)
    ]);
  };
  features_.exe_common."0.1.0" = deps: f: updateFeatures f (rec {
    base64."${deps.exe_common."0.1.0".base64}".default = true;
    cardano = fold recursiveUpdate {} [
      { "${deps.exe_common."0.1.0".cardano}"."generic-serialization" = true; }
      { "${deps.exe_common."0.1.0".cardano}".default = true; }
    ];
    cardano_storage."${deps.exe_common."0.1.0".cardano_storage}".default = true;
    cbor_event."${deps.exe_common."0.1.0".cbor_event}".default = true;
    exe_common."0.1.0".default = (f.exe_common."0.1.0".default or true);
    futures."${deps.exe_common."0.1.0".futures}".default = true;
    hyper."${deps.exe_common."0.1.0".hyper}".default = true;
    log."${deps.exe_common."0.1.0".log}".default = true;
    protocol."${deps.exe_common."0.1.0".protocol}".default = true;
    rand."${deps.exe_common."0.1.0".rand}".default = true;
    serde."${deps.exe_common."0.1.0".serde}".default = true;
    serde_derive."${deps.exe_common."0.1.0".serde_derive}".default = true;
    serde_json."${deps.exe_common."0.1.0".serde_json}".default = true;
    serde_yaml."${deps.exe_common."0.1.0".serde_yaml}".default = true;
    storage_units."${deps.exe_common."0.1.0".storage_units}".default = true;
    tokio_core."${deps.exe_common."0.1.0".tokio_core}".default = true;
  }) [
    (cratesIO.features_.base64."${deps."exe_common"."0.1.0"."base64"}" deps)
    (features_.cardano."${deps."exe_common"."0.1.0"."cardano"}" deps)
    (features_.cardano_storage."${deps."exe_common"."0.1.0"."cardano_storage"}" deps)
    (cratesIO.features_.cbor_event."${deps."exe_common"."0.1.0"."cbor_event"}" deps)
    (cratesIO.features_.futures."${deps."exe_common"."0.1.0"."futures"}" deps)
    (cratesIO.features_.hyper."${deps."exe_common"."0.1.0"."hyper"}" deps)
    (cratesIO.features_.log."${deps."exe_common"."0.1.0"."log"}" deps)
    (features_.protocol."${deps."exe_common"."0.1.0"."protocol"}" deps)
    (cratesIO.features_.rand."${deps."exe_common"."0.1.0"."rand"}" deps)
    (cratesIO.features_.serde."${deps."exe_common"."0.1.0"."serde"}" deps)
    (cratesIO.features_.serde_derive."${deps."exe_common"."0.1.0"."serde_derive"}" deps)
    (cratesIO.features_.serde_json."${deps."exe_common"."0.1.0"."serde_json"}" deps)
    (cratesIO.features_.serde_yaml."${deps."exe_common"."0.1.0"."serde_yaml"}" deps)
    (features_.storage_units."${deps."exe_common"."0.1.0"."storage_units"}" deps)
    (cratesIO.features_.tokio_core."${deps."exe_common"."0.1.0"."tokio_core"}" deps)
  ];


  crates.protocol."0.1.0" = deps: { features?(features_.protocol."0.1.0" deps {}) }: buildRustCrate {
    crateName = "protocol";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "protocol";
    dependencies = mapFeatures features ([
      (crates."cardano"."${deps."protocol"."0.1.0"."cardano"}" deps)
      (cratesIO.crates."cbor_event"."${deps."protocol"."0.1.0"."cbor_event"}" deps)
      (cratesIO.crates."log"."${deps."protocol"."0.1.0"."log"}" deps)
    ]);
  };
  features_.protocol."0.1.0" = deps: f: updateFeatures f (rec {
    cardano."${deps.protocol."0.1.0".cardano}".default = true;
    cbor_event."${deps.protocol."0.1.0".cbor_event}".default = true;
    log."${deps.protocol."0.1.0".log}".default = true;
    protocol."0.1.0".default = (f.protocol."0.1.0".default or true);
  }) [
    (features_.cardano."${deps."protocol"."0.1.0"."cardano"}" deps)
    (cratesIO.features_.cbor_event."${deps."protocol"."0.1.0"."cbor_event"}" deps)
    (cratesIO.features_.log."${deps."protocol"."0.1.0"."log"}" deps)
  ];


  crates.protocol_tokio."0.1.0" = deps: { features?(features_.protocol_tokio."0.1.0" deps {}) }: buildRustCrate {
    crateName = "protocol-tokio";
    version = "0.1.0";
    authors = [ "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "protocol-tokio";
    dependencies = mapFeatures features ([
      (cratesIO.crates."bytes"."${deps."protocol_tokio"."0.1.0"."bytes"}" deps)
      (crates."cardano"."${deps."protocol_tokio"."0.1.0"."cardano"}" deps)
      (cratesIO.crates."cbor_event"."${deps."protocol_tokio"."0.1.0"."cbor_event"}" deps)
      (cratesIO.crates."futures"."${deps."protocol_tokio"."0.1.0"."futures"}" deps)
      (cratesIO.crates."log"."${deps."protocol_tokio"."0.1.0"."log"}" deps)
      (cratesIO.crates."tokio_codec"."${deps."protocol_tokio"."0.1.0"."tokio_codec"}" deps)
      (cratesIO.crates."tokio_io"."${deps."protocol_tokio"."0.1.0"."tokio_io"}" deps)
    ]);
  };
  features_.protocol_tokio."0.1.0" = deps: f: updateFeatures f (rec {
    bytes."${deps.protocol_tokio."0.1.0".bytes}".default = true;
    cardano."${deps.protocol_tokio."0.1.0".cardano}".default = true;
    cbor_event."${deps.protocol_tokio."0.1.0".cbor_event}".default = true;
    futures."${deps.protocol_tokio."0.1.0".futures}".default = true;
    log."${deps.protocol_tokio."0.1.0".log}".default = true;
    protocol_tokio."0.1.0".default = (f.protocol_tokio."0.1.0".default or true);
    tokio_codec."${deps.protocol_tokio."0.1.0".tokio_codec}".default = true;
    tokio_io."${deps.protocol_tokio."0.1.0".tokio_io}".default = true;
  }) [
    (cratesIO.features_.bytes."${deps."protocol_tokio"."0.1.0"."bytes"}" deps)
    (features_.cardano."${deps."protocol_tokio"."0.1.0"."cardano"}" deps)
    (cratesIO.features_.cbor_event."${deps."protocol_tokio"."0.1.0"."cbor_event"}" deps)
    (cratesIO.features_.futures."${deps."protocol_tokio"."0.1.0"."futures"}" deps)
    (cratesIO.features_.log."${deps."protocol_tokio"."0.1.0"."log"}" deps)
    (cratesIO.features_.tokio_codec."${deps."protocol_tokio"."0.1.0"."tokio_codec"}" deps)
    (cratesIO.features_.tokio_io."${deps."protocol_tokio"."0.1.0"."tokio_io"}" deps)
  ];


  crates.storage_units."0.1.0" = deps: { features?(features_.storage_units."0.1.0" deps {}) }: buildRustCrate {
    crateName = "storage-units";
    version = "0.1.0";
    authors = [ "Vincent Hanquez <vincent.hanquez@iohk.io>" "Nicolas Di Prima <nicolas.diprima@iohk.io>" ];
    src = exclude [ ".git" "target" ] ./.;
    workspace_member = "storage-units";
    dependencies = mapFeatures features ([
      (cratesIO.crates."cryptoxide"."${deps."storage_units"."0.1.0"."cryptoxide"}" deps)
      (cratesIO.crates."rand"."${deps."storage_units"."0.1.0"."rand"}" deps)
    ]);
  };
  features_.storage_units."0.1.0" = deps: f: updateFeatures f (rec {
    cryptoxide."${deps.storage_units."0.1.0".cryptoxide}".default = true;
    rand."${deps.storage_units."0.1.0".rand}".default = true;
    storage_units."0.1.0".default = (f.storage_units."0.1.0".default or true);
  }) [
    (cratesIO.features_.cryptoxide."${deps."storage_units"."0.1.0"."cryptoxide"}" deps)
    (cratesIO.features_.rand."${deps."storage_units"."0.1.0"."rand"}" deps)
  ];



}; in

rec {
  cardano = crates.crates.cardano."0.1.0" deps;
  cardano_c = crates.crates.cardano_c."0.1.0" deps;
  cardano_storage = crates.crates.cardano_storage."0.1.0" deps;
  exe_common = crates.crates.exe_common."0.1.0" deps;
  protocol = crates.crates.protocol."0.1.0" deps;
  protocol_tokio = crates.crates.protocol_tokio."0.1.0" deps;
  storage_units = crates.crates.storage_units."0.1.0" deps;
  __all = [ (cardano {}) (cardano_c {}) (cardano_storage {}) (exe_common {}) (protocol {}) (protocol_tokio {}) (storage_units {}) ];
  deps.aho_corasick."0.6.8" = {
    memchr = "2.1.0";
  };
  deps.arrayvec."0.4.7" = {
    nodrop = "0.1.12";
  };
  deps.atty."0.2.11" = {
    termion = "1.5.1";
    libc = "0.2.43";
    winapi = "0.3.6";
  };
  deps.base64."0.9.3" = {
    byteorder = "1.2.6";
    safemem = "0.3.0";
  };
  deps.bitflags."1.0.4" = {};
  deps.byteorder."1.2.6" = {};
  deps.bytes."0.4.10" = {
    byteorder = "1.2.6";
    iovec = "0.1.2";
  };
  deps.cardano."0.1.0" = {
    cbor_event = "1.0.1";
    cryptoxide = "0.1.0";
    serde = "1.0.80";
    serde_derive = "1.0.80";
  };
  deps.cardano_c."0.1.0" = {
    cardano = "0.1.0";
  };
  deps.cardano_storage."0.1.0" = {
    cardano = "0.1.0";
    cbor_event = "1.0.1";
    log = "0.4.5";
    rand = "0.5.5";
    storage_units = "0.1.0";
  };
  deps.cbor_event."1.0.1" = {};
  deps.cfg_if."0.1.6" = {};
  deps.cloudabi."0.0.3" = {
    bitflags = "1.0.4";
  };
  deps.crossbeam_deque."0.6.1" = {
    crossbeam_epoch = "0.5.2";
    crossbeam_utils = "0.5.0";
  };
  deps.crossbeam_epoch."0.5.2" = {
    arrayvec = "0.4.7";
    cfg_if = "0.1.6";
    crossbeam_utils = "0.5.0";
    lazy_static = "1.1.0";
    memoffset = "0.2.1";
    scopeguard = "0.3.3";
  };
  deps.crossbeam_utils."0.5.0" = {};
  deps.cryptoxide."0.1.0" = {};
  deps.dtoa."0.4.3" = {};
  deps.env_logger."0.5.13" = {
    atty = "0.2.11";
    humantime = "1.1.1";
    log = "0.4.5";
    regex = "1.0.5";
    termcolor = "1.0.4";
  };
  deps.exe_common."0.1.0" = {
    base64 = "0.9.3";
    cardano = "0.1.0";
    cardano_storage = "0.1.0";
    cbor_event = "1.0.1";
    futures = "0.1.25";
    hyper = "0.11.27";
    log = "0.4.5";
    protocol = "0.1.0";
    rand = "0.5.5";
    serde = "1.0.80";
    serde_derive = "1.0.80";
    serde_json = "1.0.32";
    serde_yaml = "0.7.5";
    storage_units = "0.1.0";
    tokio_core = "0.1.17";
  };
  deps.fuchsia_zircon."0.3.3" = {
    bitflags = "1.0.4";
    fuchsia_zircon_sys = "0.3.3";
  };
  deps.fuchsia_zircon_sys."0.3.3" = {};
  deps.futures."0.1.25" = {};
  deps.futures_cpupool."0.1.8" = {
    futures = "0.1.25";
    num_cpus = "1.8.0";
  };
  deps.httparse."1.3.3" = {};
  deps.humantime."1.1.1" = {
    quick_error = "1.2.2";
  };
  deps.hyper."0.11.27" = {
    base64 = "0.9.3";
    bytes = "0.4.10";
    futures = "0.1.25";
    futures_cpupool = "0.1.8";
    httparse = "1.3.3";
    iovec = "0.1.2";
    language_tags = "0.2.2";
    log = "0.4.5";
    mime = "0.3.12";
    net2 = "0.2.33";
    percent_encoding = "1.0.1";
    relay = "0.1.1";
    time = "0.1.40";
    tokio_core = "0.1.17";
    tokio_io = "0.1.10";
    tokio_proto = "0.1.1";
    tokio_service = "0.1.0";
    unicase = "2.2.0";
    want = "0.0.4";
  };
  deps.iovec."0.1.2" = {
    libc = "0.2.43";
    winapi = "0.2.8";
  };
  deps.itoa."0.4.3" = {};
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.language_tags."0.2.2" = {};
  deps.lazy_static."1.1.0" = {
    version_check = "0.1.5";
  };
  deps.lazycell."1.2.0" = {};
  deps.libc."0.2.43" = {};
  deps.linked_hash_map."0.5.1" = {};
  deps.lock_api."0.1.4" = {
    owning_ref = "0.3.3";
    scopeguard = "0.3.3";
  };
  deps.log."0.3.9" = {
    log = "0.4.5";
  };
  deps.log."0.4.5" = {
    cfg_if = "0.1.6";
  };
  deps.memchr."2.1.0" = {
    cfg_if = "0.1.6";
    libc = "0.2.43";
    version_check = "0.1.5";
  };
  deps.memoffset."0.2.1" = {};
  deps.mime."0.3.12" = {
    unicase = "2.2.0";
  };
  deps.mio."0.6.16" = {
    iovec = "0.1.2";
    lazycell = "1.2.0";
    log = "0.4.5";
    net2 = "0.2.33";
    slab = "0.4.1";
    fuchsia_zircon = "0.3.3";
    fuchsia_zircon_sys = "0.3.3";
    libc = "0.2.43";
    kernel32_sys = "0.2.2";
    miow = "0.2.1";
    winapi = "0.2.8";
  };
  deps.mio_uds."0.6.7" = {
    iovec = "0.1.2";
    libc = "0.2.43";
    mio = "0.6.16";
  };
  deps.miow."0.2.1" = {
    kernel32_sys = "0.2.2";
    net2 = "0.2.33";
    winapi = "0.2.8";
    ws2_32_sys = "0.2.1";
  };
  deps.net2."0.2.33" = {
    cfg_if = "0.1.6";
    libc = "0.2.43";
    winapi = "0.3.6";
  };
  deps.nodrop."0.1.12" = {};
  deps.num_cpus."1.8.0" = {
    libc = "0.2.43";
  };
  deps.owning_ref."0.3.3" = {
    stable_deref_trait = "1.1.1";
  };
  deps.parking_lot."0.6.4" = {
    lock_api = "0.1.4";
    parking_lot_core = "0.3.1";
  };
  deps.parking_lot_core."0.3.1" = {
    rand = "0.5.5";
    smallvec = "0.6.5";
    rustc_version = "0.2.3";
    libc = "0.2.43";
    winapi = "0.3.6";
  };
  deps.percent_encoding."1.0.1" = {};
  deps.proc_macro2."0.4.20" = {
    unicode_xid = "0.1.0";
  };
  deps.protocol."0.1.0" = {
    cardano = "0.1.0";
    cbor_event = "1.0.1";
    log = "0.4.5";
  };
  deps.protocol_tokio."0.1.0" = {
    bytes = "0.4.10";
    cardano = "0.1.0";
    cbor_event = "1.0.1";
    futures = "0.1.25";
    log = "0.4.5";
    tokio_codec = "0.1.1";
    tokio_io = "0.1.10";
  };
  deps.quick_error."1.2.2" = {};
  deps.quickcheck."0.7.1" = {
    env_logger = "0.5.13";
    log = "0.4.5";
    rand = "0.5.5";
    rand_core = "0.2.2";
  };
  deps.quote."0.6.8" = {
    proc_macro2 = "0.4.20";
  };
  deps.rand."0.3.22" = {
    libc = "0.2.43";
    rand = "0.4.3";
    fuchsia_zircon = "0.3.3";
  };
  deps.rand."0.4.3" = {
    fuchsia_zircon = "0.3.3";
    libc = "0.2.43";
    winapi = "0.3.6";
  };
  deps.rand."0.5.5" = {
    rand_core = "0.2.2";
    cloudabi = "0.0.3";
    fuchsia_zircon = "0.3.3";
    libc = "0.2.43";
    winapi = "0.3.6";
  };
  deps.rand_core."0.2.2" = {
    rand_core = "0.3.0";
  };
  deps.rand_core."0.3.0" = {};
  deps.redox_syscall."0.1.40" = {};
  deps.redox_termios."0.1.1" = {
    redox_syscall = "0.1.40";
  };
  deps.regex."1.0.5" = {
    aho_corasick = "0.6.8";
    memchr = "2.1.0";
    regex_syntax = "0.6.2";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.1";
  };
  deps.regex_syntax."0.6.2" = {
    ucd_util = "0.1.1";
  };
  deps.relay."0.1.1" = {
    futures = "0.1.25";
  };
  deps.rustc_version."0.2.3" = {
    semver = "0.9.0";
  };
  deps.ryu."0.2.6" = {};
  deps.safemem."0.3.0" = {};
  deps.scoped_tls."0.1.2" = {};
  deps.scopeguard."0.3.3" = {};
  deps.semver."0.9.0" = {
    semver_parser = "0.7.0";
  };
  deps.semver_parser."0.7.0" = {};
  deps.serde."1.0.80" = {};
  deps.serde_derive."1.0.80" = {
    proc_macro2 = "0.4.20";
    quote = "0.6.8";
    syn = "0.15.13";
  };
  deps.serde_json."1.0.32" = {
    itoa = "0.4.3";
    ryu = "0.2.6";
    serde = "1.0.80";
  };
  deps.serde_yaml."0.7.5" = {
    dtoa = "0.4.3";
    linked_hash_map = "0.5.1";
    serde = "1.0.80";
    yaml_rust = "0.4.2";
  };
  deps.slab."0.3.0" = {};
  deps.slab."0.4.1" = {};
  deps.smallvec."0.2.1" = {};
  deps.smallvec."0.6.5" = {
    unreachable = "1.0.0";
  };
  deps.stable_deref_trait."1.1.1" = {};
  deps.storage_units."0.1.0" = {
    cryptoxide = "0.1.0";
    rand = "0.5.5";
  };
  deps.syn."0.15.13" = {
    proc_macro2 = "0.4.20";
    quote = "0.6.8";
    unicode_xid = "0.1.0";
  };
  deps.take."0.1.0" = {};
  deps.termcolor."1.0.4" = {
    wincolor = "1.0.1";
  };
  deps.termion."1.5.1" = {
    libc = "0.2.43";
    redox_syscall = "0.1.40";
    redox_termios = "0.1.1";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.1.0";
  };
  deps.time."0.1.40" = {
    libc = "0.2.43";
    redox_syscall = "0.1.40";
    winapi = "0.3.6";
  };
  deps.tokio."0.1.11" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    mio = "0.6.16";
    tokio_codec = "0.1.1";
    tokio_current_thread = "0.1.3";
    tokio_executor = "0.1.5";
    tokio_fs = "0.1.4";
    tokio_io = "0.1.10";
    tokio_reactor = "0.1.6";
    tokio_tcp = "0.1.2";
    tokio_threadpool = "0.1.8";
    tokio_timer = "0.2.7";
    tokio_udp = "0.1.2";
    tokio_uds = "0.2.3";
  };
  deps.tokio_codec."0.1.1" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    tokio_io = "0.1.10";
  };
  deps.tokio_core."0.1.17" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    iovec = "0.1.2";
    log = "0.4.5";
    mio = "0.6.16";
    scoped_tls = "0.1.2";
    tokio = "0.1.11";
    tokio_executor = "0.1.5";
    tokio_io = "0.1.10";
    tokio_reactor = "0.1.6";
    tokio_timer = "0.2.7";
  };
  deps.tokio_current_thread."0.1.3" = {
    futures = "0.1.25";
    tokio_executor = "0.1.5";
  };
  deps.tokio_executor."0.1.5" = {
    futures = "0.1.25";
  };
  deps.tokio_fs."0.1.4" = {
    futures = "0.1.25";
    tokio_io = "0.1.10";
    tokio_threadpool = "0.1.8";
  };
  deps.tokio_io."0.1.10" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    log = "0.4.5";
  };
  deps.tokio_proto."0.1.1" = {
    futures = "0.1.25";
    log = "0.3.9";
    net2 = "0.2.33";
    rand = "0.3.22";
    slab = "0.3.0";
    smallvec = "0.2.1";
    take = "0.1.0";
    tokio_core = "0.1.17";
    tokio_io = "0.1.10";
    tokio_service = "0.1.0";
  };
  deps.tokio_reactor."0.1.6" = {
    crossbeam_utils = "0.5.0";
    futures = "0.1.25";
    lazy_static = "1.1.0";
    log = "0.4.5";
    mio = "0.6.16";
    num_cpus = "1.8.0";
    parking_lot = "0.6.4";
    slab = "0.4.1";
    tokio_executor = "0.1.5";
    tokio_io = "0.1.10";
  };
  deps.tokio_service."0.1.0" = {
    futures = "0.1.25";
  };
  deps.tokio_tcp."0.1.2" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    iovec = "0.1.2";
    mio = "0.6.16";
    tokio_io = "0.1.10";
    tokio_reactor = "0.1.6";
  };
  deps.tokio_threadpool."0.1.8" = {
    crossbeam_deque = "0.6.1";
    crossbeam_utils = "0.5.0";
    futures = "0.1.25";
    log = "0.4.5";
    num_cpus = "1.8.0";
    rand = "0.5.5";
    tokio_executor = "0.1.5";
  };
  deps.tokio_timer."0.2.7" = {
    crossbeam_utils = "0.5.0";
    futures = "0.1.25";
    slab = "0.4.1";
    tokio_executor = "0.1.5";
  };
  deps.tokio_udp."0.1.2" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    log = "0.4.5";
    mio = "0.6.16";
    tokio_codec = "0.1.1";
    tokio_io = "0.1.10";
    tokio_reactor = "0.1.6";
  };
  deps.tokio_uds."0.2.3" = {
    bytes = "0.4.10";
    futures = "0.1.25";
    iovec = "0.1.2";
    libc = "0.2.43";
    log = "0.4.5";
    mio = "0.6.16";
    mio_uds = "0.6.7";
    tokio_io = "0.1.10";
    tokio_reactor = "0.1.6";
  };
  deps.try_lock."0.1.0" = {};
  deps.ucd_util."0.1.1" = {};
  deps.unicase."2.2.0" = {
    version_check = "0.1.5";
  };
  deps.unicode_normalization."0.1.7" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.unreachable."1.0.0" = {
    void = "1.0.2";
  };
  deps.utf8_ranges."1.0.1" = {};
  deps.version_check."0.1.5" = {};
  deps.void."1.0.2" = {};
  deps.want."0.0.4" = {
    futures = "0.1.25";
    log = "0.4.5";
    try_lock = "0.1.0";
  };
  deps.winapi."0.2.8" = {};
  deps.winapi."0.3.6" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_build."0.1.1" = {};
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_util."0.1.1" = {
    winapi = "0.3.6";
  };
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.wincolor."1.0.1" = {
    winapi = "0.3.6";
    winapi_util = "0.1.1";
  };
  deps.ws2_32_sys."0.2.1" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.yaml_rust."0.4.2" = {
    linked_hash_map = "0.5.1";
  };
}
